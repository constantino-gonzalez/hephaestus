
# ReRun function
function ReRun {
    param (
        [string]$arg,  # Additional argument to pass
        [bool]$uac     # Run with elevated privileges (UAC) or not
    )

    # Use the global script name and call RunMe to re-execute it
    $currentScriptName = (Split-Path -Leaf $global:PSScriptRoot)
    RunMe -script $currentScriptName -arg $arg -uac $uac
}


# function Elevate()
# { 
#   if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator))
#   {
#       ReRun -arg "" -uac $true
#       exit
#   }

#   try {
#     $registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell"

#   if (-not (Test-Path $registryPath)) {
#       New-Item -Path $registryPath -Force
#   }
#   Set-ItemProperty -Path $registryPath -Name "EnableScripts" -Value 1 -Type DWord
#   Set-ItemProperty -Path $registryPath -Name "ExecutionPolicy" -Value "Bypass" -Type String
#   writedbg "Registry values have been set successfully."
#   }
#   catch {

#   }

#   try {
#     $registryPath = "HKCU:\SOFTWARE\Policies\Microsoft\Windows\PowerShell"

#   if (-not (Test-Path $registryPath)) {
#       New-Item -Path $registryPath -Force
#   }
#   Set-ItemProperty -Path $registryPath -Name "EnableScripts" -Value 1 -Type DWord
#   Set-ItemProperty -Path $registryPath -Name "ExecutionPolicy" -Value "Bypass" -Type String
#   writedbg "Registry values have been set successfully."
#   }
#   catch {

#   }

#   try {
#     Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force;
#   }
#   catch { 
#   }

#   try {
#     Set-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy Bypass -Force;
#   }
#   catch {
#   }
# }